language:
  - c

matrix:
    include:
        -   os: linux
            dist: bionic
            sudo: required
            compiler: gcc
            env: SANITIZE="OFF"
        -   os: linux
            dist: bionic
            sudo: required
            compiler: clang
            env: SANITIZE="OFF"
        -   os: linux
            dist: bionic
            sudo: required
            compiler: clang
            env: SANITIZE="ON"
        -   os: linux
            arch: arm64
            dist: bionic
            sudo: required
            compiler: gcc
            env: SANITIZE="OFF"
        -   os: linux
            arch: ppc64le
            dist: bionic
            sudo: required
            compiler: gcc
            env: SANITIZE="OFF"
        -   os: osx
            compiler: gcc
            env: SANITIZE="OFF"
    allow_failures:
        -   os: osx

before_install:
  - test $TRAVIS_BRANCH != coverity -o "$CC" = "clang" || exit 0
  - test $TRAVIS_BRANCH != devel-coverity -o "$CC" = "clang" || exit 0
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then bash deploy/travis/install-libs.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then sh deploy/travis/install-libs-osx.sh; fi

script:
  - if [ "$TRAVIS_OS_NAME" = "linux" -a "$TRAVIS_CPU_ARCH" = "amd64" -a "$SANITIZE" = "OFF" ]; then mkdir build ; cd build ; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$HOME/local -DCMAKE_C_FLAGS="-Werror -coverage" -DGEN_LANGUAGE_BINDINGS=ON .. && make -j2; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" -a "$TRAVIS_CPU_ARCH" != "amd64" -a "$SANITIZE" = "OFF" ]; then mkdir build ; cd build ; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$HOME/local -DGEN_LANGUAGE_BINDINGS=ON -DENABLE_VALGRIND_TESTS=OFF .. && make -j2; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" -a "$SANITIZE" = "OFF" ]; then mkdir build ; cd build ; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$HOME/local .. && make -j2; fi
  - if [ "$SANITIZE" = "ON" ]; then mkdir build ; cd build ; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$HOME/local -DCMAKE_C_FLAGS="-fsanitize=address,undefined" -DENABLE_VALGRIND_TESTS=OFF .. && make -j2; fi
  - ctest --output-on-failure
  - sudo make install

after_success:
  - if [ "$CC" = "gcc" ]; then codecov; fi

env:
  global:
   # COVERITY_SCAN_TOKEN
   - secure: "dV/BjJUU5YLYVJk58qmbKjUoORZ7ipQzmMVsqGAgcNzpPxsYyL7c6+vvLhNPNE4oiYEUvB9f2yIE+gu6Tt1BIlm2lVzPfR4E9ArOhufzJ+8VYwYj9P9m9vZTL433t5RG4dyVVxCgo6HG7Sebp5qF4gH+bpwdFiKS2lvtwJ0h3zAMVALoE0nZDhiykrJfRpKfpb2qiWqxaxFK9syn2hwb7oOWQlBj2q21EJXUY4aPcK6a5SHfAORKcGl49Z7qR46GGpv9YKVqlNqyczRQB2krKPiHtVU0QdwI+7snG2sDYU8sOqZ5ppFuzXiARkYSuqHufnZYn0w4U2F7MIIXg8rIBh1r3NOAbM8bAlRGWKx+qptNBdHKzdkrzJFhRVOEE9wi9YhvY2IqtPLxQ1HUMeqsDXM+Vk1ZkzwSw1dIHMPWzb4pKKnoIaDZppxYZVx84lHVO7oceJ7zLwv/x/l+4MyHbqz1OXsGE8IxVMGlJSVT7TnmQd5bQ80Jc3tT4nWbqFEy6KRpCwhvvTR8z0RsSECc6V9+rDATYFWWzfZxl/zLB8tKOkiaPjH/C1Hmq8Om58wZ+PHaJKnkwMcT24iCXpi3sjyHWDlgUUdekJBVPUchyIqIcXEsKE6pFsbr5USyZFX+mD8p8+r14KRiW8nJRoVxB3EktSXiHvXFU8E4Qo6uJKs="

addons:
  coverity_scan:
    project:
      name: "sysrepo/sysrepo"
    notification_email: mvasko@cesnet.cz
    build_command_prepend: "mkdir build ; cd build ; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$HOME/local -DGEN_LANGUAGE_BINDINGS=ON .. && make clean"
    build_command: "make -j 2"
    branch_pattern: ".*coverity"
